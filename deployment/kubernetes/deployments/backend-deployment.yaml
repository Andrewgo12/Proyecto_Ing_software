# Backend API Deployment for Sistema de Inventario PYMES

apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: inventario-pymes
  labels:
    app.kubernetes.io/name: inventario-pymes
    app.kubernetes.io/component: backend
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: inventario-pymes
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: inventario-pymes
        app.kubernetes.io/component: backend
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: inventario-pymes-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: backend
        image: {{DOCKER_REGISTRY}}/backend:{{IMAGE_TAG}}
        imagePullPolicy: Always
        ports:
        - containerPort: 3001
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        # Application configuration
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: inventario-pymes-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: inventario-pymes-config
              key: PORT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: inventario-pymes-config
              key: LOG_LEVEL
        
        # Database configuration
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: inventario-pymes-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: inventario-pymes-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: inventario-pymes-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        
        # Redis configuration
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: inventario-pymes-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: inventario-pymes-config
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: password
        
        # JWT configuration
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt-secret
              key: secret
        - name: JWT_EXPIRES_IN
          valueFrom:
            configMapKeyRef:
              name: inventario-pymes-config
              key: JWT_EXPIRES_IN
        
        # Email configuration
        - name: EMAIL_HOST
          valueFrom:
            configMapKeyRef:
              name: inventario-pymes-config
              key: EMAIL_HOST
        - name: EMAIL_PORT
          valueFrom:
            configMapKeyRef:
              name: inventario-pymes-config
              key: EMAIL_PORT
        - name: EMAIL_USER
          valueFrom:
            secretKeyRef:
              name: email-secret
              key: username
        - name: EMAIL_PASS
          valueFrom:
            secretKeyRef:
              name: email-secret
              key: password
        
        # Security and performance
        - name: CORS_ORIGIN
          valueFrom:
            configMapKeyRef:
              name: inventario-pymes-config
              key: CORS_ORIGIN
        - name: RATE_LIMIT_WINDOW
          valueFrom:
            configMapKeyRef:
              name: inventario-pymes-config
              key: RATE_LIMIT_WINDOW
        - name: RATE_LIMIT_MAX
          valueFrom:
            configMapKeyRef:
              name: inventario-pymes-config
              key: RATE_LIMIT_MAX
        
        # Kubernetes specific
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        
        volumeMounts:
        - name: app-logs
          mountPath: /app/logs
        - name: app-uploads
          mountPath: /app/uploads
        - name: app-temp
          mountPath: /app/temp
        
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        
        readinessProbe:
          httpGet:
            path: /ready
            port: 3001
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
        
        startupProbe:
          httpGet:
            path: /health
            port: 3001
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
          successThreshold: 1
      
      volumes:
      - name: app-logs
        emptyDir: {}
      - name: app-uploads
        persistentVolumeClaim:
          claimName: backend-uploads-pvc
      - name: app-temp
        emptyDir:
          sizeLimit: 1Gi
      
      # Pod placement preferences
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - backend
              topologyKey: kubernetes.io/hostname
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            preference:
              matchExpressions:
              - key: node-type
                operator: In
                values:
                - application
      
      # Tolerations for dedicated application nodes
      tolerations:
      - key: "application"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"

---
# PVC for file uploads
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backend-uploads-pvc
  namespace: inventario-pymes
  labels:
    app.kubernetes.io/name: inventario-pymes
    app.kubernetes.io/component: backend-storage
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: nfs
  resources:
    requests:
      storage: 10Gi

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-hpa
  namespace: inventario-pymes
  labels:
    app.kubernetes.io/name: inventario-pymes
    app.kubernetes.io/component: backend-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: backend-pdb
  namespace: inventario-pymes
  labels:
    app.kubernetes.io/name: inventario-pymes
    app.kubernetes.io/component: backend-pdb
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: inventario-pymes
      app.kubernetes.io/component: backend